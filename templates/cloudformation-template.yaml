AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to deploy a Lambda function, SQS queue, IAM role, and EventBridge rule.

Parameters:
  LambdaRuntime:
    Type: String
    Default: python3.9
    Description: Runtime for the Lambda function.
  LambdaMemorySize:
    Type: Number
    Default: 128
    Description: Memory size for the Lambda function in MB.
  CodeS3Bucket:
    Type: String
    Description: "S3 bucket where the Lambda function code is stored"
  CodeS3Key:
    Type: String
    Description: "S3 key for the Lambda function code"

Resources:
  # SQS Queue
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-Queue"
      VisibilityTimeout: 30
      MessageRetentionPeriod: 1209600 # 14 days
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Queue"
        - Key: Environment
          Value: Production

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-LambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt SQSQueue.Arn
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: "*"

  # Lambda Function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-SQSQueueMonitor"
      Handler: lambda_function.lambda_handler
      Runtime: !Ref LambdaRuntime
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeS3Key
      MemorySize: !Ref LambdaMemorySize
      Timeout: 30
      Environment:
        Variables:
          SQS_QUEUE_URL_OR_NAME: !Ref SQSQueue

  # EventBridge Rule
  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-SQSQueueCreationRule"
      EventPattern:
        source:
          - aws.sqs
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventName:
            - CreateQueue
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: LambdaTarget

  # Permission for EventBridge to invoke Lambda
  LambdaPermissionForEventBridge:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRule.Arn

Outputs:
  SQSQueueUrl:
    Description: URL of the created SQS queue.
    Value: !Ref SQSQueue

  LambdaFunctionArn:
    Description: ARN of the Lambda function.
    Value: !GetAtt LambdaFunction.Arn

  LambdaExecutionRoleArn:
    Description: ARN of the IAM role for the Lambda function.
    Value: !GetAtt LambdaExecutionRole.Arn

